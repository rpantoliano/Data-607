library(stringr)
raw.data <-"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
name
str(name)
first_name <- str_extract_all(name, "[[:alpha:]]")
first_name
first_name <- str_extract_all(name, "[[:alpha:] ]")
first_name
first_name <- str_extract_all(name, "[[:alpha:]+ ]")
first_name
first_name <- str_extract_all(name, "[[:alpha:]+]")
first_name
first_name <- str_extract_all(name, "[[:alpha:]]+")
first_name
title <- str_detect(name, "[[:alpha:]]{2,3}\.")
title <- str_detect(name, "[[:alpha:]]{2,3}\\.")
title
second_name <- str_detect(name,  "[[:alpha:]., ]{2,}") == 3
second_name
name
second_name <- str_detect(name,  "[[:alpha:]., ]") == 3
second_name
second_name <- str_detect(name,  "[[:alpha:]., ]") == 1
second_name
second_name <- str_detect(name,  "[[:alpha:]., ]") == 2
second_name
name
second_name <- str_count(name,  "[[:alpha:]., ]") == 3
second_name
test <- str_count(name[1],  "[[:alpha:]., ]")
test
name[1]
test <- str_count(name[1],  "[[:alpha:]., ]\\b")
test
test <- str_count(name[1],  "[[:alpha:]., ]\\b")
test
test <- str_count(name[3],  "[[:alpha:]., ]\\b")
test
test <- str_count(name[2],  "[[:alpha:]., ]\\b")
test
test <- str_count(name[5],  "[[:alpha:]., ]\\b")
test
test <- str_count(name[5],  "[[:alpha:]., ]")
test
test <- str_count(name[5],  "\\w")
test
test <- str_count(name[5],  "\\b")
test
name[5]
test <- str_count(name[5],  "\\>")
test
test <- str_count(name[5],  "\\<")
test
test <- str_count(name[5],  "\\<[[:alpha:]., ]")
test
str_extract(str1, "[0-9]+\\$")
str1 <- "test1234213"
str_extract(str1, "[0-9]+\\$")
str1 <- "1234213"
str_extract(str1, "[0-9]+\\$")
str1 <- "1234213$"
str_extract(str1, "[0-9]+\\$")
str1 <- "test1234213$"
str_extract(str1, "[0-9]+\\$")
str1 <- "test1234213$12312442314"
str_extract(str1, "[0-9]+\\$")
str1 <- "test214$555"
str_extract(str1, "[0-9]+\\$")
print(str_extract_all(str1, "[0-9]+\\$"))
str1 <- "test214$555 65$  3456767$"
print(str_extract_all(str1, "[0-9]+\\$"))
str1 <- "test214$555 65$  3456767$ $"
print(str_extract_all(str1, "[0-9]+\\$"))
str1 <- "test214$555 65$  3456767$ $"
print(str_extract_all(str1, "[0-9]+\\$"))
str2 <- "The boy is bewildered by the blue ballet dancer"
str_extract(str1, "[0-9]+\\$")
print(str_extract(str2, "\\b[a-z]{1,4}\\b"))
print(str_extract_all(str2, "\\b[a-z]{1,4}\\b"))
str2 <- "The boy is walked the walk."
print(str_extract_all(str2, "\\b[a-z]{1,4}\\b"))
str2 <- "The boy walked the walk."
print(str_extract_all(str2, "\\b[a-z]{1,4}\\b"))
str3 <- "test"
print(str_extract_all(str3, ".*?\\.txt$"))
str3 <- "test.txt"
print(str_extract_all(str3, ".*?\\.txt$"))
str3 <- "test.txt hello"
print(str_extract_all(str3, ".*?\\.txt$"))
str3 <- "test.txt hello\n test2.txt"
print(str_extract_all(str3, ".*?\\.txt$"))
str3 <- ".txt"
print(str_extract_all(str3, ".*?\\.txt$"))
str3 <- ".txt\ntest1.txt \ntest2.txt\n test3.txt test4.txt\n test5.txt"
print(str_extract_all(str3, ".*?\\.txt$"))
str3a <- "test1.txt\n test2.txt"
str3b <- "hello3.txt"
print(str_extract_all(str3a, ".*?\\.txt$"))
print(str_extract_all(str3b, ".*?\\.txt$"))
str4 <- "99/99/9999 1/12/1111 12/1/1234 01/01/01 09/18/2016, a/wrong/example"
print(str_extract_all(str4, "\\d{2}/\\{2}/\\d{4}"))
str4 <- "99/99/9999 1/12/1111 12/1/1234 01/01/01 09/18/2016, a/wrong/example"
print(str_extract_all(str4, "\\d{2}/\\{2}/\\d{4}"))
print(str_extract_all(str4, "\\d{2}/\\d{2}/\\d{4}"))
str5 <- "(555)1234 (666)4321"
print(str_extract_all(str5, "<(.+?)>.+?</\\1>"))
str5 <- "(hello)1234 (666)4321"
print(str_extract_all(str5, "<(.+?)>.+?</\\1>"))
str5 <- "<(hello)>1234 (666)4321"
print(str_extract_all(str5, "<(.+?)>.+?</\\1>"))
str5 <- "asdfasd sadfasdf fasdfsd"
print(str_extract_all(str5, "<(.+?)>.+?</\\1>"))
str5 <- "asdfasd sadfasdf fasdfsd eafasdf safasdfsdaf asdfasdf"
print(str_extract_all(str5, "<(.+?)>.+?</\\1>"))
str5 <- "asdfasd sadfasdf /fasdfsd eafasdf /safasdfsdaf asdfasdf"
print(str_extract_all(str5, "<(.+?)>.+?</\\1>"))
str_test <- "test"
print(str_extract_all(str_test, "<(.+?)>"))
str_test <- "<test>"
print(str_extract_all(str_test, "<(.+?)>"))
str_test <- "<test><test2>"
print(str_extract_all(str_test, "<(.+?)>"))
print(str_extract_all(str_test, "<(.+?)>.+?"))
str_test <- "<test><test2>"
print(str_extract_all(str_test, "<(.+?)>.+?"))
print(str_extract_all(str_test, "<(.+?)>.+?<"))
str_test <- "<test><test2><test"
print(str_extract_all(str_test, "<(.+?)>.+?<"))
str_test <- "<test><test2><test4><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?<"))
str_test <- "<test><test2><test4><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?</"))
str_test <- "<test><test2><test4><test5>/"
print(str_extract_all(str_test, "<(.+?)>.+?</"))
str_test <- "<test><test2><test4><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?<"))
str_test <- "<test><test2><test4><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?<"))
print(str_extract_all(str_test, "<(.+?)>.+?</"))
str_test <- "<test><test2></test4><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?</"))
print(str_extract_all(str_test, "<(.+?)>.+?</\\1"))
str_test <- "<test><test2></test4><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?</\\1"))
str_test <- "<test>test2></test4><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?</\\1"))
str_test <- "<test>test2></test4><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?</\\1>"))
str_test <- "<test>test2></test><test5>"
print(str_extract_all(str_test, "<(.+?)>.+?</\\1>"))
str_test <- "<test>hello</test><test5>world</test5>"
print(str_extract_all(str_test, "<(.+?)>.+?</\\1>"))
splitnames <- str_split(name, " ")
splitnames
?length
split_names <- str_split(name, " ")
split_names
length(split_names[1])
(split_names[1])
split_names[1]
split_names[1,]
split_names[1]
count(split_names[1])
length(split_names[1])
str(split_names)
?str_split
split_names <- c(str_split(name, " "))
str(split_names)
lengths(split_names)
has_title <- str_detect(name, "[[:alpha:]]{2,3}\\.")
has_second <- lengths(split_names) == 2 || (lengths(split_names) > 2 && has_title)
has_second
has_second <- lengths(split_names) == 2
has_second
has_second <- lengths(split_names) > 2
split_names <- c(str_split(name, " "))
has_second <- lengths(split_names) > 2
has_second
has_second <- (lengths(split_names) > 2) & not(has_title)
has_second <- (lengths(split_names) > 2) & !has_title
has_second
lengths(split_names)
has_second <- (lengths(split_names) > 2) && !has_title
has_second
has_second <- (lengths(split_names) > 2) & !has_title
has_second
name_scrubbed <- str_replace(name, "[[;alpha:]]{1,3}\\.","")
name_scrubbed
name_scrubbed <- str_replace(name, "[[;alpha:]]{1,3}[.]","")
name_scrubbed <- str_replace(name, "[[;alpha:]]{1,3}[.]","")
name_scrubbed
name_scrubbed <- str_replace(name, "[[alpha:]]{1,3}[.]","")
name_scrubbed <- str_replace(name, "[[:alpha:]]{1,3}[.]","")
name_scrubbed <- str_replace(name, "[[:alpha:]]{1,3}[.]","")
# Vector of first_name last_name
name_scrubbed
name_scrubbed <- str_replace(name, "[[:alpha:]]{1,3}\\.","")
name_scrubbed
name_scrubbed <- str_trim(name_scrubbed)
name_scrubbed
output_list <- vector(length(names_list)
for(i in 1:length(name_list))
?vector
splitname <- str_split(name_scrubbed[i]), " ")
