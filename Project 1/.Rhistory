for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
if(str_detect(matches_list[[index]][mindex], "W|D"))
{
wcount <- wcount + 1;
waccum <- as.integer(
old_rank_list[
as.integer(
str_extract(
matches_list[[index]][mlist], "\\d+"))])
}
}
}
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
if(str_detect(matches_list[[index]][mindex], "W|D"))
{
wcount <- wcount + 1;
waccum <- as.integer(
old_rank_list[
as.integer(
str_extract(
matches_list[[index]][mindex], "\\d+"))])
}
}
}
print(str_detect(matches_list[1][1], "W|D"))
print(str_detect(matches_list[1][1], "W|D")[[1]])
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
if(str_detect(matches_list[[index]][mindex], "W|D")[[1]])
{
wcount <- wcount + 1;
waccum <- as.integer(
old_rank_list[
as.integer(
str_extract(
matches_list[[index]][mindex], "\\d+"))])
}
}
}
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
if(str_detect(matches_list[[index]][mindex], "W|D")[[1]] == TRUE)
{
wcount <- wcount + 1;
waccum <- as.integer(
old_rank_list[
as.integer(
str_extract(
matches_list[[index]][mindex], "\\d+"))])
}
}
}
if(str_detect(matches_list[[index]][mindex], "W|D")[[1]])
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(
old_rank_list[
as.integer(
str_extract(
matches_list[[index]][mindex], "\\d+"))])
}
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(
old_rank_list[
as.integer(
str_extract(
matches_list[[index]][mindex], "\\d+"))])
}
}
}
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
is_winner <- str_detect(matches_list[[1]][1], "W|D")[[1]]
print(is_winner)
str(is_winner)
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
print(matches_list[[1]][1])
print(str_detect(matches_list[1][1], "W|D")[[1]])
print(str_match(matches_list[[1]][1], " \\d+"))
print(str_trim(str_match(matches_list[[1]][1], " \\d+")))
for(index in 1:length(tournament_file))
{
dedelimit_line <- strsplit(tournament_file[index], "\\|")
dedelimit_line <- str_trim(dedelimit_line[[1]])
str_trim(dedelimit_line)
new_index <- ceiling(as.double(index) / 3)
if(index %% 3 == 1)
{
names_list[new_index] <- dedelimit_line[2]
points_list[new_index] <- dedelimit_line[3]
matches_list[new_index] <- dedelimit_line[4:9]
}
else if (index %% 3 == 2)
{
states_list[new_index] <- dedelimit_line[1]
rank <- str_extract(dedelimit_line[2], "R:\\s+\\d+")
old_rank_list[new_index] <- str_extract(rank, "\\d+")
}
}
length(names_list)
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
}
}
}
print(matches_list[1])
for(index in 1:length(tournament_file))
{
dedelimit_line <- strsplit(tournament_file[index], "\\|")
dedelimit_line <- str_trim(dedelimit_line[[1]])
str_trim(dedelimit_line)
new_index <- ceiling(as.double(index) / 3)
if(index %% 3 == 1)
{
names_list[new_index] <- dedelimit_line[2]
points_list[new_index] <- dedelimit_line[3]
matches_list[new_index] <- c(dedelimit_line[4:10])
}
else if (index %% 3 == 2)
{
states_list[new_index] <- dedelimit_line[1]
rank <- str_extract(dedelimit_line[2], "R:\\s+\\d+")
old_rank_list[new_index] <- str_extract(rank, "\\d+")
}
}
print(matches_list[1])
matches_list <- vector()
for(index in 1:length(tournament_file))
{
dedelimit_line <- strsplit(tournament_file[index], "\\|")
dedelimit_line <- str_trim(dedelimit_line[[1]])
str_trim(dedelimit_line)
new_index <- ceiling(as.double(index) / 3)
if(index %% 3 == 1)
{
names_list[new_index] <- dedelimit_line[2]
points_list[new_index] <- dedelimit_line[3]
matches_list[new_index] <- c(dedelimit_line[4:10])
}
else if (index %% 3 == 2)
{
states_list[new_index] <- dedelimit_line[1]
rank <- str_extract(dedelimit_line[2], "R:\\s+\\d+")
old_rank_list[new_index] <- str_extract(rank, "\\d+")
}
}
print(matches_list[1])
print(matches_list[1][1])
print(matches_list[1][2])
print(matches_list[1][3])
for(index in 1:length(tournament_file))
{
dedelimit_line <- strsplit(tournament_file[index], "\\|")
dedelimit_line <- str_trim(dedelimit_line[[1]])
str_trim(dedelimit_line)
new_index <- ceiling(as.double(index) / 3)
if(index %% 3 == 1)
{
names_list[new_index] <- dedelimit_line[2]
points_list[new_index] <- dedelimit_line[3]
matches_list[new_index] <- c(dedelimit_line[4:10])
}
else if (index %% 3 == 2)
{
states_list[new_index] <- dedelimit_line[1]
rank <- str_extract(dedelimit_line[2], "R:\\s+\\d+")
old_rank_list[new_index] <- str_extract(rank, "\\d+")
}
}
tournament_file <- readLines(con <- file("tournamentinfo.txt"), warn = FALSE)
tournament_file <- tournament_file[-1]
tournament_file <- tournament_file[-1]
tournament_file <- tournament_file[-1]
tournament_file <- tournament_file[-1]
names_list <- list()
states_list <- list()
points_list <- list()
old_rank_list <- list()
new_rank_list <- list()
matches_list <- vector()
# Parse file
for(index in 1:length(tournament_file))
{
dedelimit_line <- strsplit(tournament_file[index], "\\|")
dedelimit_line <- str_trim(dedelimit_line[[1]])
str_trim(dedelimit_line)
new_index <- ceiling(as.double(index) / 3)
if(index %% 3 == 1)
{
names_list[new_index] <- dedelimit_line[2]
points_list[new_index] <- dedelimit_line[3]
matches_list[new_index] <- c(dedelimit_line[4:10])
}
else if (index %% 3 == 2)
{
states_list[new_index] <- dedelimit_line[1]
rank <- str_extract(dedelimit_line[2], "R:\\s+\\d+")
old_rank_list[new_index] <- str_extract(rank, "\\d+")
}
}
for(index in 1:length(tournament_file))
{
dedelimit_line <- strsplit(tournament_file[index], "\\|")
dedelimit_line <- str_trim(dedelimit_line[[1]])
str_trim(dedelimit_line)
new_index <- ceiling(as.double(index) / 3)
if(index %% 3 == 1)
{
names_list[new_index] <- dedelimit_line[2]
points_list[new_index] <- dedelimit_line[3]
matches_list[new_index] <- list(dedelimit_line[4:10])
}
else if (index %% 3 == 2)
{
states_list[new_index] <- dedelimit_line[1]
rank <- str_extract(dedelimit_line[2], "R:\\s+\\d+")
old_rank_list[new_index] <- str_extract(rank, "\\d+")
}
}
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
}
}
}
# Parse matches list to calculate new ranking
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
}
}
if(wcount > 0)
new_rank_list[index] <- waccum / wcount
else
new_rank_list[index] <- old_rank_list[index]
}
# Parse matches list to calculate new ranking
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
}
}
if(wcount > 0)
new_rank_list[index] <- waccum / wcount
else
new_rank_list[index] <- old_rank_list[index]
print(new_rank_list[index])
}
# Parse matches list to calculate new ranking
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
}
}
if(wcount > 0)
new_rank_list[index] <- waccum / wcount
else
new_rank_list[index] <- old_rank_list[index]
print(new_rank_list[index])
}
# Parse matches list to calculate new ranking
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:6)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
print(wcount)
print(waccum)
}
}
if(wcount > 0)
new_rank_list[index] <- waccum / wcount
else
new_rank_list[index] <- old_rank_list[index]
}
print(matches_list[1])
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:7)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
print(wcount)
print(waccum)
}
}
if(wcount > 0)
new_rank_list[index] <- waccum / wcount
else
new_rank_list[index] <- old_rank_list[index]
}
?rep
data <- data.frame(names_list,states_list,points_list,old_rank_list,new_rank_list)
head (data)
data <- table(names_list,states_list,points_list,old_rank_list,new_rank_list)
df <- data.frame(names_list,states_list,points_list,old_rank_list,new_rank_list)
str(df)
names_list <- vector()
states_list <- vector()
points_list <- vector()
old_rank_list <- vector()
new_rank_list <- vector()
matches_list <- vector()
for(index in 1:length(tournament_file))
{
dedelimit_line <- strsplit(tournament_file[index], "\\|")
dedelimit_line <- str_trim(dedelimit_line[[1]])
str_trim(dedelimit_line)
new_index <- ceiling(as.double(index) / 3)
if(index %% 3 == 1)
{
names_list[new_index] <- dedelimit_line[2]
points_list[new_index] <- dedelimit_line[3]
matches_list[new_index] <- list(dedelimit_line[4:10])
}
else if (index %% 3 == 2)
{
states_list[new_index] <- dedelimit_line[1]
rank <- str_extract(dedelimit_line[2], "R:\\s+\\d+")
old_rank_list[new_index] <- str_extract(rank, "\\d+")
}
}
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:7)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
print(wcount)
print(waccum)
}
}
if(wcount > 0)
new_rank_list[index] <- waccum / wcount
else
new_rank_list[index] <- old_rank_list[index]
}
df <- data.frame(names_list,states_list,points_list,old_rank_list,new_rank_list)
str(df)
View(df)
View(df)
new_rank_list[index] <- round(waccum / wcount)
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:7)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
}
}
if(wcount > 0)
new_rank_list[index] <- round(waccum / wcount)
else
new_rank_list[index] <- old_rank_list[index]
}
df <- data.frame(names_list,states_list,points_list,old_rank_list,new_rank_list)
str(df)
View(df)
View(df)
write.table(df, file = "tournament.csv", sep=",")
str(df)
write.table(df, file = "tournament.csv", sep=",")
?write.csv
write.csv(df, file = "tournament.csv", sep=",",
row.names = FALSE,
col.names = FALSE)
write.csv(df, file = "tournament.csv", sep=",",
row.names = FALSE,
col.names = FALSE)
write.csv(df, file = "tournament.csv", row.names = FALSE, quote=FALSE)
tournament_file <- readLines(con <- file("tournamentinfo.txt"), warn = FALSE)
tournament_file <- tournament_file[-1]
tournament_file <- tournament_file[-1]
tournament_file <- tournament_file[-1]
tournament_file <- tournament_file[-1]
names_list <- vector()
states_list <- vector()
points_list <- vector()
old_rank_list <- vector()
new_rank_list <- vector()
matches_list <- vector()
# Parse file
for(index in 1:length(tournament_file))
{
dedelimit_line <- strsplit(tournament_file[index], "\\|")
dedelimit_line <- str_trim(dedelimit_line[[1]])
str_trim(dedelimit_line)
new_index <- ceiling(as.double(index) / 3)
if(index %% 3 == 1)
{
names_list[new_index] <- dedelimit_line[2]
points_list[new_index] <- dedelimit_line[3]
matches_list[new_index] <- list(dedelimit_line[4:10])
}
else if (index %% 3 == 2)
{
states_list[new_index] <- dedelimit_line[1]
rank <- str_extract(dedelimit_line[2], "R:\\s+\\d+")
old_rank_list[new_index] <- str_extract(rank, "\\d+")
}
}
# Parse matches list to calculate new ranking
for(index in 1:length(names_list))
{
wcount <- 0
waccum <- 0
for(mindex in 1:7)
{
is_winner <- str_detect(matches_list[[index]][mindex], "W|D")[[1]]
if(is_winner)
{
wcount <- wcount + 1;
waccum <- waccum + as.integer(old_rank_list[as.integer(str_extract(matches_list[[index]][mindex], "\\d+"))])
}
}
if(wcount > 0)
new_rank_list[index] <- round(waccum / wcount)
else
new_rank_list[index] <- old_rank_list[index]
}
df <- data.frame(names_list,states_list,points_list,old_rank_list,new_rank_list)
write.csv(df, file = "tournament.csv", row.names = FALSE, quote=FALSE)
setwd("~/R/Data 607/Project 1")
